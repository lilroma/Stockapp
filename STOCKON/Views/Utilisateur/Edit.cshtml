@model STOCKON.Models.Utilisateur

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Utilisateur</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Login)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Login)
            @Html.HiddenFor(model => model.Id_utilisateur) 
            @Html.ValidationMessageFor(model => model.Login)
        </div>

        <div class="editor-label">
            @Html.Label("Ancien mot de passe")
        </div>
        <div class="editor-field">
        <input type="password" name="apw" id="apw" />
           
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Pasword, "Nouveau mot de passe")
        </div>
        <div class="editor-field">
            @Html.PasswordFor(model => model.Pasword, new { value = "" })
            @Html.ValidationMessageFor(model => model.Pasword)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ConfirmPassword, "Confirmation mot de passe")
        </div>
        <div class="editor-field">
            @Html.PasswordFor(model => model.ConfirmPassword)
            @Html.ValidationMessageFor(model => model.ConfirmPassword)
        </div>
         <fieldset>
        <legend>Droits</legend>
        <div class="edito-label">
        <table ><tr><td>
        
            @Html.LabelFor(model => model.Client,"Gestion des clients")
            </td><td>
            @Html.EditorFor(model => model.Client)
            @Html.ValidationMessageFor(model => model.Client)
             </td> </tr><tr><td>

       
            @Html.LabelFor(model => model.Fournissaeur,"Gestion des fournisseurs")
             </td><td>
            @Html.EditorFor(model => model.Fournissaeur)
            @Html.ValidationMessageFor(model => model.Fournissaeur)
            </td></tr><tr><td>
            @Html.LabelFor(model => model.Facture,"Facturation")
        </td><td>
            @Html.EditorFor(model => model.Facture)
            @Html.ValidationMessageFor(model => model.Facture)
            </td></tr><tr><td>
            @Html.LabelFor(model => model.Article,"Gestion des articles")
           </td><td>
            @Html.EditorFor(model => model.Article)
            @Html.ValidationMessageFor(model => model.Article)
        </td></tr><tr><td>
            @Html.LabelFor(model => model.Mouvement_stock,"Gestion du stock")
        </td><td>
            @Html.EditorFor(model => model.Mouvement_stock)
            @Html.ValidationMessageFor(model => model.Mouvement_stock)
       </td></tr><tr><td>
            @Html.LabelFor(model => model.Etats,"Edition des états")
       </td><td>
            @Html.EditorFor(model => model.Etats)
            @Html.ValidationMessageFor(model => model.Etats)
            </td></tr><tr><td>
            @Html.LabelFor(model => model.PFacture,"Edition montants(facturation)")
       </td><td>
            @Html.EditorFor(model => model.PFacture)
            @Html.ValidationMessageFor(model => model.PFacture)
            </td></tr></table>
        </div>
        </fieldset>
       
        <p>
            <input type="submit" value="Enregistrer" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Retour à la liste", "Index")
</div>
