@model STOCKON.Models.Reglement

@{
    STOCKON.Models.Client Cl = new STOCKON.Models.Client();
    STOCKON.Models.Facture_vente Fv = new STOCKON.Models.Facture_vente();

    
    Fv = (STOCKON.Models.Facture_vente)ViewData["fav"];
    var nf = "FAV000" + Fv.Id_facture;
    
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Reglement</legend>

        <div class="editor-label">
            @Html.Label("Identtifiant de la facture")
        </div>
        <div class="editor-field">
            @Html.Label(nf)
            @Html.Hidden("Idf", Fv.Id_facture)
        </div>

        <div class="editor-label">
            @Html.Label("Nom du client")
        </div>
        <div class="editor-field">
           @Html.Label(Fv.Client.Nom_client + " " + Fv.Client.Prenom_client)
           @Html.Hidden("idc",Fv.Client.Id_client)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Date_regelement,"Date règlement")
        </div>
        <div class="editor-field">
           @Html.Telerik().DatePickerFor(model => model.Date_regelement)
           @Html.ValidationMessageFor(model => model.Date_regelement)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Montant_regelement, "Montant du règlement")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Montant_regelement)
            @Html.ValidationMessageFor(model => model.Montant_regelement)
        </div>

        <p>
            <input type="submit" value="Enregistrer" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Retour à la Liste", "Index", new { id = Fv.Id_facture })
</div>

